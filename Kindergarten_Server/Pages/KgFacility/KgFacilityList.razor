@page "/kg-facility"
@using Models
@using Business.Repository.IRepository
@inject IKgFacilityRepository KgFacilityRepository
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = Common.SD.Role_Admin)]



<div class="row mt-4">
    <div class="col-6">
        <h4 class="card-title text-info">Kindergarten Facility List</h4>
    </div>
    <div class="col-5 offset-1">
        <NavLink href="@($"kg-facility/create")" class="btn btn-info form-control">Add New Facility </NavLink>
    </div>
</div>

<div class="row mt-4">
    <div class="col-12">
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>Facility Name</th>
                    <th>Facility Details</th>
                    <th>Icon Style</th>

                    <th></th>
                </tr>
            </thead>

            <tbody>
                @if (KgFacilities.Any())
                {
                    foreach (var facility in KgFacilities)
                    {
                        <tr>
                            <td>@facility.Name</td>
                            <td>@facility.Description</td>
                            <td><i class="@facility.IconStyle"></i></td>
                            <td>
                                <NavLink href="@($"kg-facility/edit/{facility.Id}")" class="btn btn-primary">Edit</NavLink>
                                <button class="btn btn-danger" @onclick="() => HandleDelete(facility.Id)">Delete</button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">No records found</td>
                    </tr>
                }
            </tbody>

        </table>
    </div>



</div>

<DeleteConfirmation IsParentComponentProcessing="IsProcessing" ConfirmationChanged="ConfirmDelete_Click"></DeleteConfirmation>


@code {
    //retreive all facilities when page is initialized
    private IEnumerable<KgFacilityDTO> KgFacilities { get; set; } = new List<KgFacilityDTO>();
    internal int? DeleteFacilityId { get; set; } = null;
    private bool IsProcessing { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        KgFacilities = await KgFacilityRepository.GetAllKgFacilities();
    }


    public async Task HandleDelete(int facilityId)
    {
        DeleteFacilityId = facilityId;
        await JsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

    public async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;
        if (isConfirmed && DeleteFacilityId != null)
        {
            try
            {
                var result = await KgFacilityRepository.DeleteKgFacility(DeleteFacilityId.Value);
                await JsRuntime.ToastrSuccess("Facility Deleted successfully");
            }
            catch (Exception e)
            {
                await JsRuntime.ToastrError(e.Message);
            }
            KgFacilities = await KgFacilityRepository.GetAllKgFacilities();

        }

        await JsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
        IsProcessing = false;
    }

}
