
@page  "/kg-kid-details/{KidId:int}"
@using DataAccess.Data;
@using DatabaseAccess.Data;
@using Kindergarten_Client.HttpRepository;
@using Microsoft.AspNetCore.Components;
@using System.Collections.Generic;
@using System.Threading.Tasks;



<div class="container">
<h3>Kid Details:</h3>

<div class="card mt-4 bg-info">
    <div class="row">
        <div class="col-md-3">
            <img src="/images/placeholder.jpg" class="img-fluid img-thumbnail" />
        </div>
        <div class="col-md-9">
            <h3 class="card-title mt-4">@ActualKid.FirstName @ActualKid.LastName</h3>
            <p>@ActualKid.Details</p>
            <NavLink href="@($"comment/create/{KidId}")" class="btn btn-primary m-2 btn-sm custom">Add Comment</NavLink>
            <NavLink href="@($"kindergarten/kids")" class="btn btn-secondary m-2 btn-sm custom">Back to list</NavLink>
        </div>

    </div>

</div>


<div class="container-fluid  p-4 bg-primary text-white">
    <h3 style="color:lightblue">Kid Comments:</h3>

    <div class=" container row">
        @foreach (var comment in CommentList)
        {
            @if (comment.KidId != ActualKid.Id)
            {
                continue;
            }
            <div class="col-md-6 p-4">
                <div style="border:1px solid #d5d5d5; border-radius:20px; background-color:blue">
                    <div class="text-center justify-content-center">
                        <h5 class="text-warning m-4" style="border:1px solid #d5d5d5; border-radius:5px; ">@comment.Title</h5>
                        <p class="text-start justify-content-evenly m-lg-4">@comment.Content</p>
                    </div>
                    <div class="text-center justify-content-center mb-2">
                        @*<button class="btn btn-sm btn-warning" @onclick="()=>HandleEdit(comment.Id)">Edit</button>*@
                        <NavLink href="@($"comment/edit/{comment.Id}")" class="btn btn-warning m-2 btn-sm custom">Edit Comment</NavLink>
                        <button class="btn btn-danger m-2 btn-sm custom" @onclick="()=>HandleDelete(comment.Id)">Delete</button>
                    </div>

                </div>
            </div>}
    </div>
</div>
</div>






@code {
    [Parameter]
    public int? KidId { get; set; }

    public List<KidComment> CommentList { get; set; } = new List<KidComment>();
    private int? DeleteCommentId { get; set; } = null;
    private bool IsProcessing { get; set; } = false;

    public Kid ActualKid { get; set; } = new Kid();
    [Inject]
    public IKidHttpRepository KidRepo { get; set; }

    [Inject]
    public ICommentHttpRepository CommentRepo { get; set; }



    protected async override Task OnInitializedAsync()
    {
        ActualKid = await KidRepo.GetKid(KidId.Value);
        CommentList = await CommentRepo.GetComments();
    }


    protected async Task HandleDelete(int commentId)
    {
        await CommentRepo.DeleteKidComment(commentId);
        CommentList = await CommentRepo.GetComments();
    }


    protected async Task HandleEdit(int commentId)
    {
        ActualKid = await KidRepo.GetKid(KidId.Value);
        //await CommentRepo.UpdateKidComment(commentId, ActualKid);
        //CommentList = await CommentRepo.GetComments();
    }


}
